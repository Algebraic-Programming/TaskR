name: Merge into master - Run Tests Workflow

# if statements modified to avoid: https://stackoverflow.com/questions/69354003/github-action-job-fire-when-previous-job-skipped

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
          required: true
          type: string

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  DOCKERIMAGE: ghcr.io/algebraic-programming/taskr/buildenv

defaults:
  run:
    shell: bash

jobs:
  # Build TaskR and run tests and the remote image
  compile-and-test:
    runs-on: ${{ inputs.os }}
    container:
      image: ghcr.io/algebraic-programming/taskr/buildenv:latest
      options: --user hicr
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Dry-run compilation
        shell: bash
        run: source /home/hicr/.bashrc && meson setup --wipe build -Dbuildtype=debug -Db_coverage=true -DdistributedEngines=mpi,lpf,none -DbuildTests=true -DbuildExamples=true -DcompileWarningsAsErrors=true -DexecutionStateType=nosv,boost -DprocessingUnitType=nosv,pthreads -DbuildPyTaskR=true -DbuildInstrumentation=false && meson compile -C build
      
      - name: Running tests and creating coverage report
        shell: bash
        env:
          LD_PRELOAD: /usr/local/lib/libnosv.so
        run: |
          echo "Running Tests..."
          source /home/hicr/.bashrc
          meson setup build -Dbuildtype=debug -Db_coverage=true -DdistributedEngines=mpi,none -DbuildTests=true -DbuildExamples=true -DcompileWarningsAsErrors=true -DexecutionStateType=nosv,boost -DprocessingUnitType=nosv,pthreads -DbuildPyTaskR=true -DbuildInstrumentation=false
          meson compile -C build
          meson test -C build
          echo "Creating coverage report..."
          ninja -C build coverage
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: meson-logs-${{ inputs.arch }}
          path: build/meson-logs/
      